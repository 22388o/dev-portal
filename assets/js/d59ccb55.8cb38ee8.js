(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{96:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return c})),a.d(t,"toc",(function(){return d})),a.d(t,"default",(function(){return o}));var n=a(3),l=a(7),r=(a(0),a(109)),i={title:"CLI",sidebar_position:4},c={unversionedId:"trader/cli",id:"trader/cli",isDocsHomePage:!1,title:"CLI",description:"Command line interface for making swaps and trades on TDEX",source:"@site/docs/trader/cli.md",sourceDirName:"trader",slug:"/trader/cli",permalink:"/docs/trader/cli",editUrl:"https://github.com/tdex-network/dev-portal/edit/master/website/docs/trader/cli.md",version:"current",sidebarPosition:4,frontMatter:{title:"CLI",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Browser App",permalink:"/docs/trader/browser"},next:{title:"JavaScript",permalink:"/docs/trader/SDK/javascript"}},d=[{value:"Commands",id:"commands",children:[{value:"Info",id:"info",children:[]},{value:"Network",id:"network",children:[]},{value:"Wallet",id:"wallet",children:[]},{value:"Provider",id:"provider",children:[]},{value:"Market",id:"market",children:[]},{value:"Trade",id:"trade",children:[]},{value:"Run the daemon",id:"run-the-daemon",children:[]},{value:"Use <code>tdex-cli</code> to trade",id:"use-tdex-cli-to-trade",children:[]}]}],s={toc:d};function o(e){var t=e.components,a=Object(l.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},s,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Command line interface for making swaps and trades on TDEX"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"\u2b07\ufe0f Install")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Install with ",Object(r.b)("strong",{parentName:"li"},"yarn"))),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-sh"},"$ yarn global add tdex-cli\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Install with ",Object(r.b)("strong",{parentName:"li"},"npm"))),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-sh"},"$ npm i -g tdex-cli\n")),Object(r.b)("p",null,"By default, the ",Object(r.b)("inlineCode",{parentName:"p"},"tdex-cli")," will use the ",Object(r.b)("inlineCode",{parentName:"p"},"~/.tdex-cli")," as data directory, current state and private key will be stored in there."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Custom datadir (optional)")),Object(r.b)("p",null,"Configure custom directory for data persistence. You should have write permissions."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-sh"},"$ export TDEX_CLI_PATH=/absolute/path/to/data/dir\n$ tdex-cli help\n")),Object(r.b)("h2",{id:"commands"},"Commands"),Object(r.b)("h3",{id:"info"},"Info"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Show current persisted state")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-sh"},"$ tdex-cli info\n")),Object(r.b)("h3",{id:"network"},"Network"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Set the network to work against")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"NOTICE With the --explorer flag you can set your own electrum REST server (Blockstream/electrs) for connecting to the blockchain.")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-sh"},"# Mainnet\n# This uses blockstream.info as explorer\n$ tdex-cli network liquid\n# Regtest\n# This uses nigiri.network as explorer\n$ tdex-cli network regtest\n# Custom Esplora\n$ tdex-cli network regtest --explorer http://localhost:3001\n")),Object(r.b)("h3",{id:"wallet"},"Wallet"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Create or Restore Wallet")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-sh"},"$ tdex-cli wallet\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Generate a new address")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},"$ tdex-cli wallet address\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Get Wallet Balance")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-sh"},"$ tdex-cli wallet balance\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Send from Wallet")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-sh"},"$ tdex-cli wallet send\n")),Object(r.b)("h3",{id:"provider"},"Provider"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Select and connect to a liquidity provider")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-sh"},"$ tdex-cli connect https://provider.tdex.network:9945\n")),Object(r.b)("p",null,"From this point, all the commands will work against this selected provider."),Object(r.b)("h3",{id:"market"},"Market"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"List all available markets for current provider")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-sh"},"$ tdex-cli market list\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Select a market to use for trading")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-sh"},"$ tdex-cli market LBTC-USDt\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Get current exchange rate for selected market")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-sh"},"$ tdex-cli market price\n")),Object(r.b)("h3",{id:"trade"},"Trade"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Start a swap against the selected provider")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-sh"},"$ tdex-cli trade\n")),Object(r.b)("h1",{id:"advanced-buysell-example-on-regtest-with-nigiri"},"Advanced: BUY/SELL example on regtest with Nigiri"),Object(r.b)("p",null,"This example shows how to buy and sell tokens using a tdex daemon running on a ",Object(r.b)("a",{parentName:"p",href:"https://github.com/vulpemventures/nigiri"},"Nigiri")," regtest network and ",Object(r.b)("inlineCode",{parentName:"p"},"tdex-cli"),"."),Object(r.b)("h3",{id:"run-the-daemon"},"Run the daemon"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Clone and build the daemon from ",Object(r.b)("a",{parentName:"li",href:"https://github.com/TDex-network/tdex-daemon"},"Tdex-network/tdex-daemon"))),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-sh"},"$ git clone https://github.com/TDex-network/tdex-daemon\n$ cd tdex-daemon\n$ make build-linux\n$ make build-cli-linux\n")),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"Launch the tdex daemon")),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"make run-linux")," sets env variables such as the daemon use the default nigiri regtest network."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-sh"},"$ nigiri start --liquid\n$ make run-linux\n")),Object(r.b)("p",null,"Then let's use the operator CLI to setting up our daemon."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-sh"},"# init the cli configuration\n$ ./build/tdex-linux-amd64 config init\n# generate a new mnemonic\n$ SEED=$(./build/tdex-linux-amd64 genseed)\n# init the provider's wallet\n$ ./build/tdex-linux-amd64 init --seed $SEED --password secret\n# unlock the wallet using the password\n$ ./build/tdex-linux-amd64 unlock --password secret\n")),Object(r.b)("p",null,"Next, we need to fund the ",Object(r.b)("strong",{parentName:"p"},"fee account")," of our provider. "),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-sh"},"$ ./build/tdex-linux-amd64 depositfee\n# the wallet will return a confidential address, we need to send some LBTC to this one\n# here, we use nigiri faucet for example\n# /!\\ REPLACE by your deposit address /!\\\n$ nigiri faucet --liquid YOUR_FEE_ACCOUNT_ADDRESS_HERE\n")),Object(r.b)("p",null,"Well, now let's create a market:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-sh"},"# first create an empty market\n$ ./build/tdex-linux-amd64 depositmarket\n# this will return an address, we need to send it some LBTC and some ALTCOIN\n# again, let's use nigiri for that\n# let's fund the market address with LBTC\n# LBTC will be the base asset of the market\n$ nigiri faucet --liquid YOUR_MARKET_ADDRESS\n# Let's generate a new ALTCOIN and send 100 assets to the market address\n# The generated altcoin will be the quote_asset\n$ nigiri mint YOUR_MARKET_ADDRESS 100\n# /!\\ Copy the altcoin asset hash in the clipboard!\n")),Object(r.b)("p",null,"We need to open the new market, by default a new market is not tradable."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-sh"},"# Select the market using `config set`\n$ ./build/tdex-linux-amd64 config set base_asset 5ac9f65c0efcc4775e0baec4ec03abdde22473cd3cf33c0419ca290e0751b225\n$ ./build/tdex-linux-amd64 config set quote_asset ALTCOIN_ASSET_HASH_HERE\n# Then make the market tradable\n$ ./build/tdex-linux-amd64 open\n")),Object(r.b)("p",null,"Congrats! The daemon is running and has a tradable market LBTC/ALTCOIN."),Object(r.b)("h3",{id:"use-tdex-cli-to-trade"},"Use ",Object(r.b)("inlineCode",{parentName:"h3"},"tdex-cli")," to trade"),Object(r.b)("p",null,"Now we will use ",Object(r.b)("inlineCode",{parentName:"p"},"tdex-cli"),", the CLI for traders."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-sh"},"# set up network to regtest + config local nigiri explorer\n$ tdex-cli network regtest --explorer http://127.0.0.1:3001\n# connect to localhost daemon\n$ tdex-cli connect localhost:9945\n# generate new wallet (or import it from seed) using wallet\n$ tdex-cli wallet\n# let's generate a new address and fund it\n$ tdex-cli wallet address\n$ nigiri faucet --liquid TRADER_ADDRESS_HERE\n")),Object(r.b)("p",null,"Our trader account owns LBTC, thus he can use ",Object(r.b)("inlineCode",{parentName:"p"},"trade")," to SELL them (and so buy some altcoins!)."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-sh"},"# list the market available\n$ tdex-cli market list\n# copy the market recently created, it should be something like 'LBTC-6f02'\n# then select this market (replace by your market pair!)\n$ tdex-cli market LBTC-6f02\n# use `trade` and select SELL and follow the instructions\n$ tdex-cli trade\n")),Object(r.b)("p",null,"We have sent 1 LBTC and receive 50.125 ALTCOINs ! Now I BUY some LBTC using my ALTCOINs:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-sh"},"# Select the BUY option this time!\n$ tdex-cli trade\n# and follow the instructions, try to buy 1 BTC\n")))}o.isMDXComponent=!0}}]);